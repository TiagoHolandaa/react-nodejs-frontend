{"ast":null,"code":"import axios from \"axios\";\nexport const api = axios.create({\n  baseURL: \"http://localhost:5000\"\n});\nexport const createSession = async (email, password) => {\n  return api.post(\"/sessions\", {\n    email,\n    password\n  });\n};\nexport const getRepositories = async (userId, query) => {\n  let url = `/users/${userId}/repositories/`;\n\n  if (query !== \"\") {\n    url += `?q=${query}`;\n  }\n\n  console.log(\"query\", url);\n  return api.get(url);\n};\nexport const createRepository = async (userId, repositoryUrl) => {\n  const repositoryName = getRepositoryName(repositoryUrl);\n  const url = `/users/${userId}/repositories/`;\n  return api.post(url, {\n    name: repositoryName,\n    url: repositoryUrl\n  });\n};\nexport const destroyRepository = async (userId, id) => {\n  const url = `/users/${userId}/repositories/${id}`;\n  return api.delete(url);\n};\n\nconst getRepositoryName = url => {\n  const regex = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()!@:%_\\\\+.~#?&\\\\/\\\\/=]*)/;\n  const match = url.match(regex);\n  console.log(\"match\", match);\n\n  if (match[2]) {\n    const values = match[2].split(\"/\");\n    console.log(\"values\", values);\n    return `${values[1]}/${values[2]}`;\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","createSession","email","password","post","getRepositories","userId","query","url","console","log","get","createRepository","repositoryUrl","repositoryName","getRepositoryName","name","destroyRepository","id","delete","regex","match","values","split"],"sources":["C:/Users/Tiago - DARM/Documents/GitHub/react-nodejs-frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const api = axios.create({\r\n    baseURL:\"http://localhost:5000\",\r\n});\r\n\r\nexport const createSession = async (email, password) => {\r\n    return api.post(\"/sessions\", {email, password})\r\n}\r\n\r\nexport const getRepositories = async(userId, query) => {\r\n    let url = `/users/${userId}/repositories/`\r\n\r\n    if (query !== \"\") {\r\n        url += `?q=${query}`;\r\n    }\r\n\r\n    console.log(\"query\", url)\r\n\r\n    return api.get(url);\r\n}\r\n\r\nexport const createRepository = async (userId, repositoryUrl) => {\r\n    const repositoryName = getRepositoryName(repositoryUrl)\r\n    const url = `/users/${userId}/repositories/`;\r\n\r\n    return api.post(url, {name: repositoryName, url: repositoryUrl})\r\n}\r\n\r\nexport const destroyRepository = async (userId, id) => {\r\n    const url = `/users/${userId}/repositories/${id}`;\r\n\r\n    return api.delete(url)\r\n}\r\n\r\nconst getRepositoryName = (url) => {\r\n    const regex = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()!@:%_\\\\+.~#?&\\\\/\\\\/=]*)/;\r\n\r\n    const match = url.match(regex);\r\n\r\n    console.log(\"match\", match)\r\n\r\n    if (match[2]) {\r\n        const values = match[2].split(\"/\");\r\n        console.log(\"values\", values)\r\n\r\n        return `${values[1]}/${values[2]}`\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;EAC5BC,OAAO,EAAC;AADoB,CAAb,CAAZ;AAIP,OAAO,MAAMC,aAAa,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;EACpD,OAAOL,GAAG,CAACM,IAAJ,CAAS,WAAT,EAAsB;IAACF,KAAD;IAAQC;EAAR,CAAtB,CAAP;AACH,CAFM;AAIP,OAAO,MAAME,eAAe,GAAG,OAAMC,MAAN,EAAcC,KAAd,KAAwB;EACnD,IAAIC,GAAG,GAAI,UAASF,MAAO,gBAA3B;;EAEA,IAAIC,KAAK,KAAK,EAAd,EAAkB;IACdC,GAAG,IAAK,MAAKD,KAAM,EAAnB;EACH;;EAEDE,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;EAEA,OAAOV,GAAG,CAACa,GAAJ,CAAQH,GAAR,CAAP;AACH,CAVM;AAYP,OAAO,MAAMI,gBAAgB,GAAG,OAAON,MAAP,EAAeO,aAAf,KAAiC;EAC7D,MAAMC,cAAc,GAAGC,iBAAiB,CAACF,aAAD,CAAxC;EACA,MAAML,GAAG,GAAI,UAASF,MAAO,gBAA7B;EAEA,OAAOR,GAAG,CAACM,IAAJ,CAASI,GAAT,EAAc;IAACQ,IAAI,EAAEF,cAAP;IAAuBN,GAAG,EAAEK;EAA5B,CAAd,CAAP;AACH,CALM;AAOP,OAAO,MAAMI,iBAAiB,GAAG,OAAOX,MAAP,EAAeY,EAAf,KAAsB;EACnD,MAAMV,GAAG,GAAI,UAASF,MAAO,iBAAgBY,EAAG,EAAhD;EAEA,OAAOpB,GAAG,CAACqB,MAAJ,CAAWX,GAAX,CAAP;AACH,CAJM;;AAMP,MAAMO,iBAAiB,GAAIP,GAAD,IAAS;EAC/B,MAAMY,KAAK,GAAG,8GAAd;EAEA,MAAMC,KAAK,GAAGb,GAAG,CAACa,KAAJ,CAAUD,KAAV,CAAd;EAEAX,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBW,KAArB;;EAEA,IAAIA,KAAK,CAAC,CAAD,CAAT,EAAc;IACV,MAAMC,MAAM,GAAGD,KAAK,CAAC,CAAD,CAAL,CAASE,KAAT,CAAe,GAAf,CAAf;IACAd,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBY,MAAtB;IAEA,OAAQ,GAAEA,MAAM,CAAC,CAAD,CAAI,IAAGA,MAAM,CAAC,CAAD,CAAI,EAAjC;EACH;AACJ,CAbD"},"metadata":{},"sourceType":"module"}